/* The position CSS property sets how an element is positioned in a document. It determines how 4 other properties top, right, bottom, and left work

position: static(default)/relative/absolute/fixed/sticky
*/

div{
    display: inline-block;
    height: 100px;
    width: 100px;
    border: 2px black solid;
    background-color: darkblue;
}
.middle{
    background-color: green;
}

/* Static: The element is positioned according to the normal flow of the document. The top, right, bottom, left properties have no effect. This is the default value. */
.static .middle{
    position: static;
}

/* Relative: The element is positioned according to the normal flow of the document, but we can offset it relative to itself using top, right, bottom, left. The offset does not affect the position of any other elements; thus, the space given for the element in the page layout is the same as if position were static. */
.relative .middle{
    position: relative;
    top: 50px;
}

/* Absolute: The element is removed from the normal document flow, and no space is created for the element in the page layout. It is positioned relative to its closest positioned(i.e. position is set to anything other than static) ancestor, if any; otherwise, it is placed relative to the initial containing block i.e. the viewport. Its final position is determined by the values of top, right, bottom, and left.*/
.absolute .middle{
    position: absolute;
    /* no demonstration of top, left, bottom, right. If there is a situation where I need this property, I will come back */
}

/* Fixed: The element is removed from the normal document flow, and no space is created for the element in the page layout. It is positioned relative to the initial containing block    i.e. the viewport. However the element remains fixed in its position even when the user scrolls the page. It does not move with the rest of the content. */
.fixed .middle{
    position: fixed;
    top:0;
    left: 50%;
}